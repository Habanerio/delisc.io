/* tslint:disable */
/* eslint-disable */
/**
 * Api | v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from './runtime';
import type {
   ProblemDetails,
   SubmitLinkRequest,
   SubmitLinkResponse,
   SubmitLinksRequest,
} from '../models/index';
import {
   ProblemDetailsFromJSON,
   ProblemDetailsToJSON,
   SubmitLinkRequestFromJSON,
   SubmitLinkRequestToJSON,
   SubmitLinkResponseFromJSON,
   SubmitLinkResponseToJSON,
   SubmitLinksRequestFromJSON,
   SubmitLinksRequestToJSON,
} from '../models/index';

export interface ApiV1SubmitPostRequest {
   submitLinkRequest: SubmitLinkRequest;
}

export interface ApiV1SubmitsPostRequest {
   submitLinksRequest: SubmitLinksRequest;
}

/**
 *
 */
export class SubmitsApi extends runtime.BaseAPI {
   /**
    * Submits a single url
    */
   async apiV1SubmitPostRaw(
      requestParameters: ApiV1SubmitPostRequest,
      initOverrides?: RequestInit | runtime.InitOverrideFunction,
   ): Promise<runtime.ApiResponse<SubmitLinkResponse>> {
      if (requestParameters['submitLinkRequest'] == null) {
         throw new runtime.RequiredError(
            'submitLinkRequest',
            'Required parameter "submitLinkRequest" was null or undefined when calling apiV1SubmitPost().',
         );
      }

      const queryParameters: any = {};

      const headerParameters: runtime.HTTPHeaders = {};

      headerParameters['Content-Type'] = 'application/json';

      const response = await this.request(
         {
            path: `/api/v1/submit`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: SubmitLinkRequestToJSON(requestParameters['submitLinkRequest']),
         },
         initOverrides,
      );

      return new runtime.JSONApiResponse(response, (jsonValue) =>
         SubmitLinkResponseFromJSON(jsonValue),
      );
   }

   /**
    * Submits a single url
    */
   async apiV1SubmitPost(
      requestParameters: ApiV1SubmitPostRequest,
      initOverrides?: RequestInit | runtime.InitOverrideFunction,
   ): Promise<SubmitLinkResponse> {
      const response = await this.apiV1SubmitPostRaw(requestParameters, initOverrides);
      return await response.value();
   }

   /**
    * Submits one or more urls
    */
   async apiV1SubmitsPostRaw(
      requestParameters: ApiV1SubmitsPostRequest,
      initOverrides?: RequestInit | runtime.InitOverrideFunction,
   ): Promise<runtime.ApiResponse<SubmitLinkResponse>> {
      if (requestParameters['submitLinksRequest'] == null) {
         throw new runtime.RequiredError(
            'submitLinksRequest',
            'Required parameter "submitLinksRequest" was null or undefined when calling apiV1SubmitsPost().',
         );
      }

      const queryParameters: any = {};

      const headerParameters: runtime.HTTPHeaders = {};

      headerParameters['Content-Type'] = 'application/json';

      const response = await this.request(
         {
            path: `/api/v1/submits`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: SubmitLinksRequestToJSON(requestParameters['submitLinksRequest']),
         },
         initOverrides,
      );

      return new runtime.JSONApiResponse(response, (jsonValue) =>
         SubmitLinkResponseFromJSON(jsonValue),
      );
   }

   /**
    * Submits one or more urls
    */
   async apiV1SubmitsPost(
      requestParameters: ApiV1SubmitsPostRequest,
      initOverrides?: RequestInit | runtime.InitOverrideFunction,
   ): Promise<SubmitLinkResponse> {
      const response = await this.apiV1SubmitsPostRaw(requestParameters, initOverrides);
      return await response.value();
   }
}
