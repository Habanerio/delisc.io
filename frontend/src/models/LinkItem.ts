/* tslint:disable */
/* eslint-disable */
/**
 * Api | v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { LinkTag } from './LinkTag';
import {
   LinkTagFromJSON,
   LinkTagFromJSONTyped,
   LinkTagToJSON,
   LinkTagToJSONTyped,
} from './LinkTag';

/**
 *
 * @export
 * @interface LinkItem
 */
export interface LinkItem {
   /**
    *
    * @type {string}
    * @memberof LinkItem
    */
   id?: string;
   /**
    *
    * @type {string}
    * @memberof LinkItem
    */
   description?: string;
   /**
    *
    * @type {string}
    * @memberof LinkItem
    */
   domain?: string;
   imageUrl?: string;
   /**
    *
    * @type {number}
    * @memberof LinkItem
    */
   likes?: number;
   /**
    *
    * @type {number}
    * @memberof LinkItem
    */
   saves?: number;
   /**
    *
    * @type {Array<LinkTag>}
    * @memberof LinkItem
    */
   tags?: Array<LinkTag>;
   /**
    *
    * @type {string}
    * @memberof LinkItem
    */
   title?: string;
   /**
    *
    * @type {string}
    * @memberof LinkItem
    */
   url?: string;
   /**
    *
    * @type {Date}
    * @memberof LinkItem
    */
   dateCreated?: Date;
   /**
    *
    * @type {Date}
    * @memberof LinkItem
    */
   dateUpdated?: Date;
}

/**
 * Check if a given object implements the LinkItem interface.
 */
export function instanceOfLinkItem(value: object): value is LinkItem {
   return true;
}

export function LinkItemFromJSON(json: any): LinkItem {
   return LinkItemFromJSONTyped(json, false);
}

export function LinkItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): LinkItem {
   if (json == null) {
      return json;
   }
   return {
      id: json['id'] == null ? undefined : json['id'],
      description: json['description'] == null ? undefined : json['description'],
      imageUrl: json['imageUrl'] == null ? undefined : json['imageUrl'],
      likes: json['likes'] == null ? undefined : json['likes'],
      saves: json['saves'] == null ? undefined : json['saves'],
      tags: json['tags'] == null ? undefined : (json['tags'] as Array<any>).map(LinkTagFromJSON),
      title: json['title'] == null ? undefined : json['title'],
      url: json['url'] == null ? undefined : json['url'],
      dateCreated: json['dateCreated'] == null ? undefined : new Date(json['dateCreated']),
      dateUpdated: json['dateUpdated'] == null ? undefined : new Date(json['dateUpdated']),
   };
}

export function LinkItemToJSON(json: any): LinkItem {
   return LinkItemToJSONTyped(json, false);
}

export function LinkItemToJSONTyped(
   value?: LinkItem | null,
   ignoreDiscriminator: boolean = false,
): any {
   if (value == null) {
      return value;
   }

   return {
      id: value['id'],
      description: value['description'],
      imageUrl: value['imageUrl'],
      likes: value['likes'],
      saves: value['saves'],
      tags: value['tags'] == null ? undefined : (value['tags'] as Array<any>).map(LinkTagToJSON),
      title: value['title'],
      url: value['url'],
      dateCreated: value['dateCreated'] == null ? undefined : value['dateCreated'].toISOString(),
      dateUpdated: value['dateUpdated'] == null ? undefined : value['dateUpdated'].toISOString(),
   };
}
